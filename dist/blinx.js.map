{"version":3,"file":"blinx.js","sources":["webpack:///webpack/bootstrap 13becc488190219b3aa8","webpack:///./helpers/dom.ts","webpack:///./helpers/osis.ts","webpack:///../node_modules/umbrellajs/umbrella.min.js","webpack:///./parser/parser.class.ts","webpack:///../node_modules/lodash/_Symbol.js","webpack:///./bible/bible.class.ts","webpack:///./main.ts","webpack:///./blinx.class.ts","webpack:///./options/options.ts","webpack:///../node_modules/lodash/isString.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///./bible/online-bible/online-bible-overview.ts","webpack:///./bible/online-bible/bible-server-online-bible.class.ts","webpack:///./bible/online-bible/online-bible.class.ts","webpack:///./bible/versions/bible-versions.const.ts","webpack:///./helpers/deferred.class.ts","webpack:///./bible/bible-api/bible-api-overview.ts","webpack:///./bible/bible-api/get-bible-bible-api.class.ts","webpack:///./bible/bible-api/bible-api.class.ts","webpack:///./helpers/jsonp.ts","webpack:///./helpers/polyfills.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 13becc488190219b3aa8","/** Load script for the given src dynamicaly & asynchronously */\r\nexport function loadScript(src: string, callback?: (successful: boolean) => void): void {\r\n  const script = document.createElement('script');\r\n  script.src = src;\r\n  if (callback) {\r\n    script.onload = () => callback(true);\r\n    script.onerror = () => callback(false);\r\n  }\r\n  document.body.appendChild(script);\r\n}\r\n\r\nexport function loadCSS(src: string, callback?: (successful: boolean) => void): void {\r\n  const link = document.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.href = src;\r\n  if (callback) {\r\n    link.onload = () => callback(true);\r\n    link.onerror = () => callback(false);\r\n  }\r\n  document.head.appendChild(link);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/dom.ts","import { BibleBook } from 'src/bible/versions/bible-version.interface';\r\n\r\nexport interface BibleReferencePoint {\r\n  book: BibleBook;\r\n  chapter: number;\r\n  verse?: number;\r\n}\r\n\r\nexport interface BibleReference {\r\n  start: BibleReferencePoint;\r\n  end?: BibleReferencePoint;\r\n}\r\n\r\n/**\r\n * Parses given OSIS reference.\r\n * @param osis OSIS reference\r\n * @return Object containing all parts of the reference\r\n */\r\nexport function parseOsis(osis: string): BibleReference {\r\n  let reference: BibleReference = { start: { book: 'Gen', chapter: -1 } };\r\n  for (let i = 0; i < 2; i++) {\r\n    const segment = osis.split('-')[i];\r\n    if (segment) {\r\n      const parts = segment.split('.');\r\n      const referencePoint: BibleReferencePoint = {\r\n        book: parts[0] as BibleBook,\r\n        chapter: +parts[1]\r\n      };\r\n      if (parts.length > 2) {\r\n        referencePoint.verse = +parts[2];\r\n      }\r\n      reference[i === 0 ? 'start' : 'end'] = referencePoint;\r\n    }\r\n  }\r\n  return reference;\r\n}\r\n\r\nexport type BookNameMap = {[P in BibleBook]?: string };\r\n\r\nexport class TransformOsisOptions {\r\n  /** Separator between chapter and verse */\r\n  chapterVerse: string = ':';\r\n  /** Separator between book name and chapter number  */\r\n  bookChapter: string = '';\r\n  /** Options for removing superfluous elements: none, duplicate book name, duplicate book name and chapter  */\r\n  removeSuperfluous: 'none' | 'book' | 'bookChapter' = 'bookChapter';\r\n  /** Mapping of book names. Anything not contained in it will remain unchanged. */\r\n  bookNameMap: BookNameMap = {};\r\n}\r\n\r\n/**\r\n * Transform OSIS reference with the given options\r\n * @param osis OSIS reference\r\n * @param options Options\r\n * @returns Transformed reference\r\n */\r\nexport function transformOsis(osis: string, options: Partial<TransformOsisOptions> = {}): string {\r\n  const defaults = new TransformOsisOptions();\r\n  const chapterVerse = (options.chapterVerse !== void 0) ? options.chapterVerse : defaults.chapterVerse;\r\n  const bookChapter = (options.bookChapter !== void 0) ? options.bookChapter : defaults.bookChapter;\r\n  const bookNames = (options.bookNameMap !== void 0) ? options.bookNameMap : defaults.bookNameMap;\r\n  const removeSuperfluous = (options.removeSuperfluous !== void 0) ? options.removeSuperfluous :\r\n    defaults.removeSuperfluous;\r\n  const ref = parseOsis(osis);\r\n  let transformed = bookNames[ref.start.book] || ref.start.book;\r\n  transformed += bookChapter + ref.start.chapter;\r\n  if (ref.start.verse) {\r\n    transformed += chapterVerse + ref.start.verse;\r\n  }\r\n  if (ref.end) {\r\n    transformed += '-';\r\n    let chapterAdded = false;\r\n    if (ref.end.book !== ref.start.book || removeSuperfluous === 'none') {\r\n      transformed += bookNames[ref.end.book] || ref.end.book;\r\n      transformed += bookChapter + ref.end.chapter;\r\n      chapterAdded = true;\r\n    } else if (ref.end.chapter !== ref.start.chapter || removeSuperfluous === 'book') {\r\n      transformed += ref.end.chapter;\r\n      chapterAdded = true;\r\n    }\r\n    if (ref.end.verse) {\r\n      transformed += (chapterAdded ? chapterVerse : '') + ref.end.verse;\r\n    }\r\n  }\r\n  return transformed;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/osis.ts","/* Umbrella JS 2.10.0 umbrellajs.com */\nfunction ajax(a,b,c,d){c=c||function(){},b=b||{},b.body=b.body||{},b.method=(b.method||\"GET\").toUpperCase(),b.headers=b.headers||{},b.headers[\"X-Requested-With\"]=b.headers[\"X-Requested-With\"]||\"XMLHttpRequest\",\"undefined\"!=typeof window.FormData&&b.body instanceof window.FormData||(b.headers[\"Content-Type\"]=b.headers[\"Content-Type\"]||\"application/x-www-form-urlencoded\"),/json/.test(b.headers[\"Content-Type\"])&&(b.body=JSON.stringify(b.body)),\"object\"!=typeof b.body||b.body instanceof window.FormData||(b.body=u().param(b.body));var e=new window.XMLHttpRequest;u(e).on(\"error timeout abort\",function(){c(new Error,null,e)}).on(\"load\",function(){var a=/^(4|5)/.test(e.status)?new Error(e.status):null,b=parseJson(e.response)||e.response;return c(a,b,e)}),e.open(b.method,a),e.withCredentials=!0;for(var f in b.headers)e.setRequestHeader(f,b.headers[f]);return d&&d(e),e.send(b.body),e}function parseJson(a){try{var b=JSON.parse(a);if(b&&\"object\"==typeof b)return b}catch(c){}return!1}var u=function(a,b){return this instanceof u?a instanceof u?a:(\"string\"==typeof a&&(a=this.select(a,b)),a&&a.nodeName&&(a=[a]),void(this.nodes=this.slice(a))):new u(a,b)};u.prototype={get length(){return this.nodes.length}},u.prototype.nodes=[],u.prototype.addClass=function(){return this.eacharg(arguments,function(a,b){a.classList.add(b)})},u.prototype.adjacent=function(a,b,c){return\"number\"==typeof b&&(b=0===b?[]:new Array(b).join().split(\",\").map(Number.call,Number)),this.each(function(d,e){var f=document.createDocumentFragment();u(b||{}).map(function(b,c){var f=\"function\"==typeof a?a.call(this,b,c,d,e):a;return\"string\"==typeof f?this.generate(f):u(f)}).each(function(a){this.isInPage(a)?f.appendChild(u(a).clone().first()):f.appendChild(a)}),c.call(this,d,f)})},u.prototype.after=function(a,b){return this.adjacent(a,b,function(a,b){a.parentNode.insertBefore(b,a.nextSibling)})},u.prototype.ajax=function(a,b){return this.handle(\"submit\",function(c){ajax(u(this).attr(\"action\"),{body:u(this).serialize(),method:u(this).attr(\"method\")},a&&a.bind(this),b&&b.bind(this))})},u.prototype.append=function(a,b){return this.adjacent(a,b,function(a,b){a.appendChild(b)})},u.prototype.args=function(a,b,c){return\"function\"==typeof a&&(a=a(b,c)),\"string\"!=typeof a&&(a=this.slice(a).map(this.str(b,c))),a.toString().split(/[\\s,]+/).filter(function(a){return a.length})},u.prototype.array=function(a){a=a;var b=this;return this.nodes.reduce(function(c,d,e){var f;return a?(f=a.call(b,d,e),f||(f=!1),\"string\"==typeof f&&(f=u(f)),f instanceof u&&(f=f.nodes)):f=d.innerHTML,c.concat(f!==!1?f:[])},[])},u.prototype.attr=function(a,b,c){return c=c?\"data-\":\"\",this.pairs(a,b,function(a,b){return a.getAttribute(c+b)},function(a,b,d){a.setAttribute(c+b,d)})},u.prototype.before=function(a,b){return this.adjacent(a,b,function(a,b){a.parentNode.insertBefore(b,a)})},u.prototype.children=function(a){return this.map(function(a){return this.slice(a.children)}).filter(a)},u.prototype.clone=function(){return this.map(function(a,b){var c=a.cloneNode(!0),d=this.getAll(c);return this.getAll(a).each(function(a,b){for(var c in this.mirror)this.mirror[c](a,d.nodes[b])}),c})},u.prototype.getAll=function(a){return u([a].concat(u(\"*\",a).nodes))},u.prototype.mirror={},u.prototype.mirror.events=function(a,b){if(a._e)for(var c in a._e)a._e[c].forEach(function(a){u(b).on(c,a)})},u.prototype.mirror.select=function(a,b){u(a).is(\"select\")&&(b.value=a.value)},u.prototype.mirror.textarea=function(a,b){u(a).is(\"textarea\")&&(b.value=a.value)},u.prototype.closest=function(a){return this.map(function(b){do if(u(b).is(a))return b;while((b=b.parentNode)&&b!==document)})},u.prototype.data=function(a,b){return this.attr(a,b,!0)},u.prototype.each=function(a){return this.nodes.forEach(a.bind(this)),this},u.prototype.eacharg=function(a,b){return this.each(function(c,d){this.args(a,c,d).forEach(function(a){b.call(this,c,a)},this)})},u.prototype.empty=function(){return this.each(function(a){for(;a.firstChild;)a.removeChild(a.firstChild)})},u.prototype.filter=function(a){var b=function(b){return b.matches=b.matches||b.msMatchesSelector||b.webkitMatchesSelector,b.matches(a||\"*\")};return\"function\"==typeof a&&(b=a),a instanceof u&&(b=function(b){return a.nodes.indexOf(b)!==-1}),u(this.nodes.filter(b))},u.prototype.find=function(a){return this.map(function(b){return u(a||\"*\",b)})},u.prototype.first=function(){return this.nodes[0]||!1},u.prototype.generate=function(a){return/^\\s*<t(h|r|d)/.test(a)?u(document.createElement(\"table\")).html(a).children().nodes:/^\\s*</.test(a)?u(document.createElement(\"div\")).html(a).children().nodes:document.createTextNode(a)},u.prototype.handle=function(){var a=this.slice(arguments).map(function(a){return\"function\"==typeof a?function(b){b.preventDefault(),a.apply(this,arguments)}:a},this);return this.on.apply(this,a)},u.prototype.hasClass=function(){return this.is(\".\"+this.args(arguments).join(\".\"))},u.prototype.html=function(a){return void 0===a?this.first().innerHTML||\"\":this.each(function(b){b.innerHTML=a})},u.prototype.is=function(a){return this.filter(a).length>0},u.prototype.isInPage=function(a){return a!==document.body&&document.body.contains(a)},u.prototype.last=function(){return this.nodes[this.length-1]||!1},u.prototype.map=function(a){return a?u(this.array(a)).unique():this},u.prototype.not=function(a){return this.filter(function(b){return!u(b).is(a||!0)})},u.prototype.off=function(a){return this.eacharg(a,function(a,b){u(a._e?a._e[b]:[]).each(function(c){a.removeEventListener(b,c)})})},u.prototype.on=function(a,b,c){if(\"string\"==typeof b){var d=b;b=function(a){var b=arguments;u(a.currentTarget).find(d).each(function(d){if(d===a.target||d.contains(a.target)){try{Object.defineProperty(a,\"currentTarget\",{get:function(){return d}})}catch(e){}c.apply(d,b)}})}}var e=function(a){return b.apply(this,[a].concat(a.detail||[]))};return this.eacharg(a,function(a,b){a.addEventListener(b,e),a._e=a._e||{},a._e[b]=a._e[b]||[],a._e[b].push(e)})},u.prototype.pairs=function(a,b,c,d){if(\"undefined\"!=typeof b){var e=a;a={},a[e]=b}return\"object\"==typeof a?this.each(function(b){for(var c in a)d(b,c,a[c])}):this.length?c(this.first(),a):\"\"},u.prototype.param=function(a){return Object.keys(a).map(function(b){return this.uri(b)+\"=\"+this.uri(a[b])}.bind(this)).join(\"&\")},u.prototype.parent=function(a){return this.map(function(a){return a.parentNode}).filter(a)},u.prototype.prepend=function(a,b){return this.adjacent(a,b,function(a,b){a.insertBefore(b,a.firstChild)})},u.prototype.remove=function(){return this.each(function(a){a.parentNode&&a.parentNode.removeChild(a)})},u.prototype.removeClass=function(){return this.eacharg(arguments,function(a,b){a.classList.remove(b)})},u.prototype.replace=function(a,b){var c=[];return this.adjacent(a,b,function(a,b){c=c.concat(this.slice(b.children)),a.parentNode.replaceChild(b,a)}),u(c)},u.prototype.scroll=function(){return this.first().scrollIntoView({behavior:\"smooth\"}),this},u.prototype.select=function(a,b){if(a=a.replace(/^\\s*/,\"\").replace(/\\s*$/,\"\"),b)return this.select.byCss(a,b);for(var c in this.selectors)if(b=c.split(\"/\"),new RegExp(b[1],b[2]).test(a))return this.selectors[c](a);return this.select.byCss(a)},u.prototype.select.byCss=function(a,b){return(b||document).querySelectorAll(a)},u.prototype.selectors={},u.prototype.selectors[/^\\.[\\w\\-]+$/]=function(a){return document.getElementsByClassName(a.substring(1))},u.prototype.selectors[/^\\w+$/]=function(a){return document.getElementsByTagName(a)},u.prototype.selectors[/^\\#[\\w\\-]+$/]=function(a){return document.getElementById(a.substring(1))},u.prototype.selectors[/^</]=function(a){return u().generate(a)},u.prototype.serialize=function(){var a=this;return this.slice(this.first().elements).reduce(function(b,c){return!c.name||c.disabled||\"file\"===c.type?b:/(checkbox|radio)/.test(c.type)&&!c.checked?b:\"select-multiple\"===c.type?(u(c.options).each(function(d){d.selected&&(b+=\"&\"+a.uri(c.name)+\"=\"+a.uri(d.value))}),b):b+\"&\"+a.uri(c.name)+\"=\"+a.uri(c.value)},\"\").slice(1)},u.prototype.siblings=function(a){return this.parent().children(a).not(this)},u.prototype.size=function(){return this.first().getBoundingClientRect()},u.prototype.slice=function(a){return a&&0!==a.length&&\"string\"!=typeof a&&\"[object Function]\"!==a.toString()?a.length?[].slice.call(a.nodes||a):[a]:[]},u.prototype.str=function(a,b){return function(c){return\"function\"==typeof c?c.call(this,a,b):c.toString()}},u.prototype.text=function(a){return void 0===a?this.first().textContent||\"\":this.each(function(b){b.textContent=a})},u.prototype.toggleClass=function(a,b){return!!b===b?this[b?\"addClass\":\"removeClass\"](a):this.eacharg(a,function(a,b){a.classList.toggle(b)})},u.prototype.trigger=function(a){var b=this.slice(arguments).slice(1);return this.eacharg(a,function(a,c){var d,e={bubbles:!0,cancelable:!0,detail:b};try{d=new window.CustomEvent(c,e)}catch(f){d=document.createEvent(\"CustomEvent\"),d.initCustomEvent(c,!0,!0,b)}a.dispatchEvent(d)})},u.prototype.unique=function(){return u(this.nodes.reduce(function(a,b){var c=null!==b&&void 0!==b&&b!==!1;return c&&a.indexOf(b)===-1?a.concat(b):a},[]))},u.prototype.uri=function(a){return encodeURIComponent(a).replace(/!/g,\"%21\").replace(/'/g,\"%27\").replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\").replace(/\\*/g,\"%2A\").replace(/%20/g,\"+\")},u.prototype.wrap=function(a){function b(a){for(;a.firstElementChild;)a=a.firstElementChild;return u(a)}return this.map(function(c){return u(a).each(function(a){b(a).append(c.cloneNode(!0)),c.parentNode.replaceChild(a,c)})})},\"object\"==typeof module&&module.exports&&(module.exports={u:u,ajax:ajax});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/umbrellajs/umbrella.min.js\n// module id = 2\n// module chunks = 0","import { LanguageCode } from 'src/options/languages';\r\nimport { loadScript } from 'src/helpers/dom';\r\nimport { Options } from 'src/options/options';\r\n\r\nexport class Parser {\r\n  private _bcv?: BCV.Parser;\r\n  public get bcv(): BCV.Parser {\r\n    if (this._bcv) {\r\n      return this._bcv;\r\n    }\r\n    throw new Error('The bcv_parser script has not been loaded successfully yet.');\r\n  }\r\n  static getCurrentParserLanguage(): LanguageCode | false {\r\n    if (window.bcv_parser) {\r\n      const parser: BCV.Parser = new window.bcv_parser();\r\n      if (parser['languages'] && parser['languages'].length === 1) {\r\n        return parser['languages'][0] as LanguageCode;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Load bcv parser script for the given language */\r\n  public load(options: Options, callback?: (successful: boolean) => void) {\r\n    if (Parser.getCurrentParserLanguage() === options.language) {\r\n      this.initBcvParser(options);\r\n      this._bcv = this._bcv || new window.bcv_parser();\r\n      if (callback) {\r\n        callback(true);\r\n      }\r\n    } else {\r\n      loadScript('https://cdn.rawgit.com/openbibleinfo/Bible-Passage-Reference-Parser/537560a7/js/' +\r\n        `${options.language}_bcv_parser.js`,\r\n        successful => {\r\n          if (successful) {\r\n            this.initBcvParser(options);\r\n          }\r\n          if (callback) {\r\n            callback(successful);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private initBcvParser(options: Options) {\r\n    this._bcv = this._bcv || new window.bcv_parser();\r\n    options.parserOptions = options.parserOptions || {};\r\n    if (Parser.getCurrentParserLanguage() === 'de') {\r\n      if (!('punctuation_strategy' in options.parserOptions)) {\r\n        options.parserOptions.punctuation_strategy = 'eu';\r\n      }\r\n    }\r\n    if (!('sequence_combination_strategy' in options.parserOptions)) {\r\n      options.parserOptions.sequence_combination_strategy = 'separate';\r\n    }\r\n    if (options.parserOptions) {\r\n      this._bcv.set_options(options.parserOptions);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./parser/parser.class.ts","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_Symbol.js\n// module id = 4\n// module chunks = 0","import { BibleVersions, BibleVersionCode, BibleVersionsInterface } from 'src/bible/versions/bible-versions.const';\r\nimport { LanguageCode } from 'src/options/languages';\r\n\r\nexport type BibleVersionMap = {\r\n  readonly [P in BibleVersionCode]?: string;\r\n};\r\n\r\nexport abstract class Bible {\r\n  protected readonly abstract bibleVersionMap: BibleVersionMap;\r\n\r\n  /** Return all available versions for this bible and (if provided) for the given language. */\r\n  public getAvailableVersions(language?: LanguageCode): Partial<BibleVersionsInterface> {\r\n    const allVersions = new BibleVersions();\r\n    const availableVersions: Partial<BibleVersionsInterface> = {};\r\n    for (const version in allVersions) {\r\n      if (allVersions.hasOwnProperty(version)) {\r\n        if (Object.keys(this.bibleVersionMap).indexOf(version) > -1) {\r\n          if (!language || language === (allVersions as any)[version].languageCode) {\r\n            (availableVersions as any)[version] = (allVersions as any)[version];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableVersions;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/bible.class.ts","import { Blinx } from 'src/blinx.class';\r\n\r\nwindow.blinx = new Blinx();\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./main.ts","import { Options, applyScriptTagOptions } from 'src/options/options';\r\nimport { Parser } from 'src/parser/parser.class';\r\nimport { u } from 'umbrellajs';\r\nimport { OnlineBible } from 'src/bible/online-bible/online-bible.class';\r\nimport isString = require('lodash/isString');\r\nimport { getOnlineBible } from 'src/bible/online-bible/online-bible-overview';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\nimport { loadScript, loadCSS } from 'src/helpers/dom';\r\nimport { Deferred } from 'src/helpers/deferred.class';\r\nimport { BibleApi } from 'src/bible/bible-api/bible-api.class';\r\nimport { getBibleApi } from 'src/bible/bible-api/bible-api-overview';\r\nimport { Bible } from 'src/bible/bible.class';\r\nimport { transformOsis } from 'src/helpers/osis';\r\nimport { loadPolyfills } from 'src/helpers/polyfills';\r\n\r\nexport class Blinx {\r\n\r\n  private options = new Options();\r\n  private parser = new Parser();\r\n  private onlineBible: OnlineBible;\r\n  private bibleApi: BibleApi;\r\n  private tippyObjects: Tippy.Object[] = [];\r\n  private tippyLoaded = new Deferred<void>();\r\n\r\n  /** Initialise blinx. */\r\n  constructor() {\r\n    applyScriptTagOptions(this.options);\r\n    this.onlineBible = getOnlineBible(this.options.onlineBible);\r\n    // TODO: Later on, the best Bible API containing a certain translation should rather be used automatically\r\n    this.bibleApi = getBibleApi(this.options.bibleApi);\r\n    // Load dependencies required for link creation\r\n    let pending = 2;\r\n    const callback = (successful: boolean) => {\r\n      if (successful) {\r\n        pending--;\r\n        if (pending === 0) {\r\n          this.initComplete();\r\n        }\r\n      }\r\n    };\r\n    this.parser.load(this.options, callback);\r\n    loadPolyfills(callback);\r\n    // Load dependencies required for tooltip display\r\n    this.loadTippy();\r\n  }\r\n\r\n  /** Execute a parse for the given options. */\r\n  public execute(): void {\r\n    // Search within all whitelisted selectors\r\n    u(this.options.whitelist.length ? `${this.options.whitelist.join(' *, ')} *` : 'body')\r\n      // Exclude blacklisted selectors\r\n      .not(this.options.blacklist.join(', '))\r\n      .not(this.options.blacklist.length ? `${this.options.blacklist.join(' *, ')} *` : '')\r\n      // Go one level deeper to get text nodes; NB: This does not keep the order or nodes\r\n      // .map(node => node.hasChildNodes() && Array.prototype.slice.call(node.childNodes))\r\n      .each(node => this.parseReferencesInNode(node));\r\n    // Once tippy.js is loaded, add tooltips\r\n    this.tippyLoaded.promise\r\n      .then(() => this.addTooltips());\r\n  }\r\n\r\n  private addTooltips() {\r\n    const versionCode = this.getVersionCode(this.onlineBible);\r\n    // Loop through all nodes in order to create a unique template for each\r\n    u('[data-osis]')\r\n      .each((node, index) => {\r\n        const osis = u(node).data('osis');\r\n        const template = u('<div />')\r\n          .html(`\r\n<a class=\"bxPassageLink\" href=\"${this.onlineBible.buildPassageLink(osis, versionCode)}\" target=\"_blank\">\r\n  ${this.convertOsisToContext(osis)}\r\n<a>\r\n<div class=\"bxPassageText\">\r\n  ...\r\n</div>\r\n          `).attr('id', `bxTippyTemplate${index}`);\r\n        this.tippyObjects.push(\r\n          tippy(node as Element, {\r\n            placement: 'bottom',\r\n            theme: 'light',\r\n            interactive: true,\r\n            html: template.nodes[0],\r\n            onShow: (tippyInstance) => {\r\n              const osis = u(tippyInstance.reference).data('osis');\r\n              this.getTooltipContent(osis)\r\n                .then((text: string) => {\r\n                  u(template).find('.bxPassageText').html(text);\r\n                });\r\n            }\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  /** Second step of initialisation after parser & polyfills are loaded. */\r\n  private initComplete(): void {\r\n    if (this.options.parseAutomatically) {\r\n      if (/^complete|interactive|loaded$/.test(document.readyState)) {\r\n        // DOM already parsed\r\n        this.execute();\r\n      } else {\r\n        // DOM content not yet loaded\r\n        const handler = () => {\r\n          u(document).off('DOMContentLoaded', handler);\r\n          this.execute();\r\n        };\r\n        u(document).on('DOMContentLoaded', handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Look for and link all references found in the text node children of the given node.\r\n   * @param node Any\r\n   */\r\n  private parseReferencesInNode(node: Node): void {\r\n    const childNodes = Array.prototype.slice.call(node.childNodes);\r\n    for (const childNode of childNodes) {\r\n      if (this.isTextNode(childNode)) {\r\n        // Look for all complete Bible references\r\n        this.parser.bcv.parse(childNode.textContent || '');\r\n        const refs = this.parser.bcv.osis_and_indices();\r\n        this.handleReferencesFoundInText(childNode, refs);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Link the given reference and continue looking for further (partial) references in the remaining text.\r\n   * @param node Text node the given reference was found in\r\n   * @param ref bcv_parser reference object\r\n   */\r\n  private handleReferencesFoundInText(node: Text, refs: BCV.OsisAndIndices[]): void {\r\n    for (let i = refs.length - 1; i >= 0; i--) {\r\n      const ref = refs[i];\r\n      const remainder = node.splitText(ref.indices[1]);\r\n      const passage = node.splitText(ref.indices[0]);\r\n      if (passage) { // Always true in this case\r\n        this.addLink(passage, ref);\r\n      }\r\n      this.parsePartialReferencesInText(remainder, this.convertOsisToContext(ref.osis));\r\n    }\r\n  }\r\n\r\n  private convertOsisToContext(osis: string): string {\r\n    const chapterVerse = this.options.parserOptions && this.options.parserOptions.punctuation_strategy === 'eu' ?\r\n      ',' : ':';\r\n    return transformOsis(osis, { bookChapter: ' ', chapterVerse });\r\n  }\r\n\r\n  /**\r\n   * Look for and link partial references in the given text node.\r\n   * Unfortunately, bcv.parse_with_context() only works, if the string\r\n   * *starts* with the partial passage, so the beginning needs to be\r\n   * determined by searching for chapter/verse numbers.\r\n   * @param node Text node\r\n   * @param previousPassage Previous recognized passage as parser context\r\n   */\r\n  private parsePartialReferencesInText(node: Text, previousPassage: string): void {\r\n    const text = node.textContent || '';\r\n    // Search for first number\r\n    const match = text.match(/\\d/);\r\n    // TODO: Check support of match.index\r\n    if (match && typeof match.index !== 'undefined') {\r\n      let possibleReferenceWithPrefix: string = '';\r\n      const possibleReferenceWithoutPrefix = text.slice(match.index);\r\n      let offset = 0;\r\n      if (match.index > 0) {\r\n        // Check if it is preceded by a prefix (which could be 'chapter ' or 'vs.' etc.)\r\n        const preceding = text.slice(0, match.index);\r\n        const matchPrefix = preceding.match(/\\w+\\.?\\s*$/);\r\n        if (matchPrefix) {\r\n          possibleReferenceWithPrefix = matchPrefix[0] + possibleReferenceWithoutPrefix;\r\n          offset = match.index - matchPrefix[0].length;\r\n        }\r\n      }\r\n      // Check for possible reference with prefix first\r\n      if (possibleReferenceWithPrefix) {\r\n        this.parser.bcv.parse_with_context(possibleReferenceWithPrefix, previousPassage);\r\n      }\r\n      // If none available or unsuccessful, check for possible reference starting with number(s)\r\n      if (!possibleReferenceWithPrefix || !this.parser.bcv.osis()) {\r\n        this.parser.bcv.parse_with_context(possibleReferenceWithoutPrefix, previousPassage);\r\n        offset = match.index;\r\n      }\r\n      // If either successful, adjust the indices due to the slice above and handle the reference\r\n      const refs = this.parser.bcv.osis_and_indices();\r\n      if (refs.length) {\r\n        for (const ref of refs) {\r\n          ref.indices[0] += offset;\r\n          ref.indices[1] += offset;\r\n        }\r\n        this.handleReferencesFoundInText(node, refs);\r\n      }\r\n    }\r\n  }\r\n\r\n  private isTextNode(node: Node): node is Text {\r\n    return node.nodeType === node.TEXT_NODE;\r\n  }\r\n\r\n  private addLink(node: Node, ref: BCV.OsisAndIndices): void {\r\n    const versionCode = this.getVersionCode(this.onlineBible);\r\n    u(node)\r\n      .wrap(`<a></a>`)\r\n      .attr('href', this.onlineBible.buildPassageLink(ref.osis, versionCode))\r\n      .attr('target', '_blank')\r\n      .data('osis', ref.osis);\r\n  }\r\n\r\n  private getVersionCode(bible: Bible): BibleVersionCode {\r\n    let versionCode = isString(this.options.bibleVersion) ? this.options.bibleVersion :\r\n      this.options.bibleVersion.bibleText;\r\n    const availableVersions = Object.keys(bible.getAvailableVersions(this.options.language)) as BibleVersionCode[];\r\n    // If the versionCode does not match the given language or is not supported by the given Bible,\r\n    // find the first version available for the given online Bible for this language\r\n    if (versionCode.indexOf(this.options.language) !== 0 || availableVersions.indexOf(versionCode) === -1) {\r\n      if (availableVersions.length) {\r\n        versionCode = availableVersions[0];\r\n      }\r\n    }\r\n    return versionCode;\r\n  }\r\n\r\n  private getTooltipContent(osis: string): Promise<string> {\r\n    const versionCode = this.getVersionCode(this.bibleApi);\r\n    return this.bibleApi.getPassage(osis, versionCode);\r\n  }\r\n\r\n  private loadTippy() {\r\n    let counter = 2;\r\n    const callback = (successful: boolean) => {\r\n      if (successful) {\r\n        counter--;\r\n        if (counter === 0) {\r\n          this.tippyLoaded.resolve();\r\n        }\r\n      }\r\n    };\r\n    loadScript(`https://unpkg.com/tippy.js/dist/tippy.all.js`, callback);\r\n    loadCSS('https://unpkg.com/tippy.js@2.2.3/dist/themes/light.css', callback);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./blinx.class.ts","import { u } from 'umbrellajs';\r\nimport { Languages } from 'src/options/languages';\r\nimport { Parser } from 'src/parser/parser.class';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\nimport { OnlineBibleName } from 'src/bible/online-bible/online-bible-overview';\r\nimport { BibleApiName } from 'src/bible/bible-api/bible-api-overview';\r\n\r\nexport class Options {\r\n  [key: string]: any;\r\n\r\n  /** Language code of the language to be used for the parser. */\r\n  language: keyof Languages = 'en';\r\n  /** Code of the bible version to be used, for the displayed Bible text and the online Bible being linked to. */\r\n  bibleVersion: BibleVersionCode | { bibleText: BibleVersionCode, onlineBible: BibleVersionCode } = 'en.ESV';\r\n  /** Online Bible to be linked to. */\r\n  onlineBible: OnlineBibleName = 'BibleServer';\r\n  /** Online Bible to be linked to. */\r\n  bibleApi: BibleApiName = 'getBible';\r\n  /**\r\n   * Futher options for the parser.\r\n   * @see https://github.com/openbibleinfo/Bible-Passage-Reference-Parser#options\r\n   */\r\n  parserOptions?: BCV.Options;\r\n  /** By default, the parse will start automatically once the page is loaded. If false,\r\n   *  it needs to be triggered manually.\r\n   */\r\n  parseAutomatically: boolean = true;\r\n  /** Automatic parsing will happen within the elements with the following whitelisted selectors. */\r\n  whitelist: string[] = ['body'];\r\n  /** Automatic parsing can be disabled with the following whitelisted selectors. */\r\n  blacklist: string[] = ['a'];\r\n}\r\n\r\nexport function applyScriptTagOptions(options: Options): void {\r\n  // Parse options object from data-blinx attribute on script tag\r\n  const tagOptionsString = u('script[data-blinx]').data('blinx');\r\n  let opts: Partial<Options> = {};\r\n  try {\r\n    // tslint:disable-next-line:no-eval\r\n    const evalOpts = eval(`(${tagOptionsString})`);\r\n    if (evalOpts instanceof Object) {\r\n      opts = evalOpts;\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  } catch (e) {\r\n    console.error(`Blinx: Invalid options: '${tagOptionsString}'`);\r\n  }\r\n  // If user does not specify language in script tag, check whether he has inlcude a bcv_parser with a\r\n  // single language already\r\n  if (!(opts.language)) {\r\n    const language = Parser.getCurrentParserLanguage();\r\n    if (language) {\r\n      opts.language = language;\r\n    }\r\n  }\r\n  for (const key in opts) {\r\n    if (opts.hasOwnProperty(key)) {\r\n      options[key] = opts[key];\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./options/options.ts","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isString.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_baseGetTag.js\n// module id = 10\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_root.js\n// module id = 11\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_freeGlobal.js\n// module id = 12\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 13\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_getRawTag.js\n// module id = 14\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_objectToString.js\n// module id = 15\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isArray.js\n// module id = 16\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isObjectLike.js\n// module id = 17\n// module chunks = 0","import { OnlineBible } from 'src/bible/online-bible/online-bible.class';\r\nimport { BibleServerOnlineBible } from 'src/bible/online-bible/bible-server-online-bible.class';\r\n\r\nexport type OnlineBibleName = 'BibleServer';\r\n\r\nexport function getOnlineBible(name: OnlineBibleName): OnlineBible {\r\n  return name === 'BibleServer' ? new BibleServerOnlineBible() : new BibleServerOnlineBible();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/online-bible/online-bible-overview.ts","import { OnlineBible } from 'src/bible/online-bible/online-bible.class';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\nimport { transformOsis } from 'src/helpers/osis';\r\n\r\nexport class BibleServerOnlineBible extends OnlineBible {\r\n\r\n  protected readonly bibleVersionMap = {\r\n    'ar.ALAB': 'ALAB',\r\n    'bg.BGV': 'BGV',\r\n    'bg.CBT': 'CBT',\r\n    'cs.B21': 'B21',\r\n    'cs.BKR': 'BKR',\r\n    'cs.CEP': 'CEP',\r\n    'cs.SNC': 'SNC',\r\n    'da.DK': 'DK',\r\n    'de.ELB': 'ELB',\r\n    'de.EU': 'EU',\r\n    'de.GNB': 'GNB',\r\n    'de.HFA': 'HFA',\r\n    'de.LUT': 'LUT',\r\n    'de.MENG': 'MENG',\r\n    'de.NeÜ': 'NeÜ',\r\n    'de.NGÜ': 'NGÜ',\r\n    'de.NLB': 'NLB',\r\n    'de.SLT': 'SLT',\r\n    'de.ZB': 'ZB',\r\n    'en.ESV': 'ESV',\r\n    'en.KJV': 'KJV',\r\n    'en.NIRV': 'NIRV',\r\n    'en.NIV': 'NIV',\r\n    'es.BTX': 'BTX',\r\n    'es.CST': 'CST',\r\n    'es.NVI': 'NVI',\r\n    'fa.FCB': 'FCB',\r\n    'fr.BDS': 'BDS',\r\n    'fr.LSG': 'LSG',\r\n    'fr.S21': 'S21',\r\n    'he.OT': 'OT',\r\n    'hr.CKK': 'CKK',\r\n    'hu.HUN': 'HUN',\r\n    'hu.KAR': 'KAR',\r\n    'it.ITA': 'ITA',\r\n    'it.NRS': 'NRS',\r\n    'grc.LXX': 'LXX',\r\n    'la.VUL': 'VUL',\r\n    'nl.HTB': 'HTB',\r\n    'no.NOR': 'NOR',\r\n    'pl.PSZ': 'PSZ',\r\n    'pt.PRT': 'PRT',\r\n    'ro.NTR': 'NTR',\r\n    'ru.CARS': 'CARS',\r\n    'ru.RSZ': 'RSZ',\r\n    'sk.NPK': 'NPK',\r\n    'sv.BSV': 'BSV',\r\n    'tr.TR': 'TR',\r\n    'za.CCBT': 'CCBT',\r\n    'za.CUVS': 'CUVS'\r\n  };\r\n\r\n  public buildPassageLink(osis: string, bibleVersion: BibleVersionCode): string {\r\n    osis = transformOsis(osis);\r\n    return `https://www.bibleserver.com/text/${bibleVersion.split('.')[1]}/${osis}`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/online-bible/bible-server-online-bible.class.ts","import { Bible } from 'src/bible/bible.class';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\n\r\nexport abstract class OnlineBible extends Bible {\r\n  public abstract buildPassageLink(osis: string, bibleVersion: BibleVersionCode): string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/online-bible/online-bible.class.ts","import { BibleVersion, BibleSection } from 'src/bible/versions//bible-version.interface';\r\n\r\n// tslint:disable:max-line-length\r\nexport type BibleVersionCode = keyof BibleVersions;\r\n\r\nexport type BibleVersionsInterface = {\r\n  [P in BibleVersionCode]: BibleVersion\r\n};\r\n\r\n/**\r\n * All Bible versions supported by one of the online Bibles or Bible APIs.\r\n * If the user has not specified a Bible version, the first one available for that language in the order given below will be chosen.\r\n */\r\nexport class BibleVersions implements BibleVersionsInterface {\r\n\r\n  // Afrikaans\r\n  'af.AOV' = { title: 'Ou Vertaling', languageCode: 'af', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Amharic (Ehtopia)\r\n  'am.HSAB' = { title: 'Haile Selassie Amharic Bible', languageCode: 'am', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'am.Amharic' = { title: 'Amharic NT', languageCode: 'am', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Arabic\r\n  'ar.ALAB' = { title: 'التفسير التطبيقي للكتاب المقدس', languageCode: 'ar', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'ar.ArabicSV' = { title: 'Smith and Van Dyke', languageCode: 'ar', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Aramaic\r\n  'arc.Peshitta' = { title: 'Peshitta NT', languageCode: 'arc', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Bulgarian\r\n  'bg.BGV' = { title: 'Veren', languageCode: 'bg', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'bg.CBT' = { title: 'Библия, нов превод от оригиналните езици', languageCode: 'bg', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'bg.Bulgarian1940' = { title: 'Bulgarian Bible (1940)', languageCode: 'bg', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Breton\r\n  'br.Breton' = { title: 'Breton', languageCode: 'br', availableSections: ['Gospels'] as BibleSection[] };\r\n\r\n  // Chamorro (GUam, Northern Mariana Islands)\r\n  'ch.Chamorro' = { title: 'Chamorro', languageCode: 'ch', availableSections: ['Ps', 'Gospels', 'Acts'] as BibleSection[] };\r\n\r\n  // Coptic\r\n  'cop.Bohairic' = { title: 'Bohairic NT', languageCode: 'cop', availableSections: ['NT'] as BibleSection[] };\r\n  'cop.Coptic' = { title: 'Coptic NT', languageCode: 'cop', availableSections: ['NT'] as BibleSection[] };\r\n  'cop.Sahidic' = { title: 'Sahidic NT', languageCode: 'cop', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Czech\r\n  'cs.B21' = { title: 'Bible, překlad 21. století', languageCode: 'cs', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'cs.BKR' = { title: 'Bible Kralická', languageCode: 'cs', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'cs.CEP' = { title: 'Český ekumenický překlad', languageCode: 'cs', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'cs.SNC' = { title: 'Slovo na cestu', languageCode: 'cs', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'cs.KMS' = { title: 'Křesťanská misijní společnost', languageCode: 'cs', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'cs.NKB' = { title: 'Nova Bible Kralicka', languageCode: 'cs', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Danish\r\n  'da.DK' = { title: 'Bibelen på hverdagsdansk', languageCode: 'da', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'da.Danish' = { title: 'Danish', languageCode: 'da', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // German\r\n  'de.ELB' = { title: 'Elberfelder Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.ZB' = { title: 'Zürcher Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.LUT' = { title: 'Lutherbibel 2017', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'de.NeÜ' = { title: 'Neue evangelistische Übersetzung', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.SLT' = { title: 'Schlachter 2000', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.EU' = { title: 'Einheitsübersetzung 2016', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'de.MENG' = { title: 'Menge Bibel', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'de.NLB' = { title: 'Neues Leben. Die Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.GNB' = { title: 'Gute Nachricht Bibel', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] as BibleSection[] };\r\n  'de.HFA' = { title: 'Hoffnung für Alle', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.NGÜ' = { title: 'Neue Genfer Übersetzung', languageCode: 'de', availableSections: ['Psalms', 'NT'] as BibleSection[] }; // Very good but unfortunatly not complete\r\n  'de.SLT1951' = { title: 'Schlachter (1951)', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.ELB1905' = { title: 'Elberfelder (1905)', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.ELB1871' = { title: 'Elberfelder (1871)', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.LUT1912' = { title: 'Luther (1912)', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'de.LUT1545' = { title: 'Luther (1545)', languageCode: 'de', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Modern Greek\r\n  'el.ModernGreek' = { title: 'Modern Greek', languageCode: 'el', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // English\r\n  'en.ESV' = { title: 'English Standard Version', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.NIV' = { title: 'New International Version', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.WEB' = { title: 'World English Bible', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.KJV' = { title: 'King James Version', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.NIRV' = { title: 'New Int. Readers Version', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.AKJV' = { title: 'KJV Easy Read', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.ASV' = { title: 'American Standard Version', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.BasicEnglish' = { title: 'Basic English Bible', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.Darby' = { title: 'Darby', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.YLT' = { title: `Young's Literal Translation`, languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.WB' = { title: `Webster's Bible`, languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.DouayRheims' = { title: 'Douay Rheims', languageCode: 'en', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'en.Weymouth' = { title: 'Weymouth NT', languageCode: 'en', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Esperanto\r\n  'eo.Esperanto' = { title: 'Esperanto', languageCode: 'eo', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Spanish\r\n  'es.BTX' = { title: 'La Biblia Textual', languageCode: 'es', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'es.CST' = { title: 'Nueva Versión Internacional (Castilian)', languageCode: 'es', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'es.NVI' = { title: 'Nueva Versión Internacional', languageCode: 'es', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'es.Valera' = { title: 'Reina Valera (1909)', languageCode: 'es', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'es.RV1858' = { title: 'Reina Valera NT (1858)', languageCode: 'es', availableSections: ['NT'] as BibleSection[] };\r\n  'es.SSE' = { title: 'Sagradas Escrituras (1569)', languageCode: 'es', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Estonian\r\n  'et.Estonian' = { title: 'Estonian', languageCode: 'et', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Basque\r\n  'eu.Basque' = { title: 'Navarro Labourdin NT', languageCode: 'eu', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Persian/Farsi\r\n  'fa.FCB' = { title: 'کتاب مقدس، ترجمه تفسیری', languageCode: 'fa', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Finnish\r\n  'fi.Finnish1776' = { title: 'Finnish Bible (1776)', languageCode: 'fi', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fi.PyhaRaamattu1933' = { title: 'Pyha Raamattu (1933 1938)', languageCode: 'fi', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fi.PyhaRaamattu1992' = { title: 'Pyha Raamattu (1992)', languageCode: 'fi', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // French\r\n  'fr.BDS' = { title: 'Bible du Semeur', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fr.LSG' = { title: 'Louis Segond 1910', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fr.S21' = { title: 'Segond 21', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fr.Martin' = { title: 'Martin (1744)', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fr.LS1910' = { title: 'Louis Segond (1910)', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'fr.Ostervald1996' = { title: 'Ostervald (1996 revision)', languageCode: 'fr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Scottish Gaelic\r\n  'gd.Gaelic' = { title: 'Scots Gaelic Gospel of Mark', languageCode: 'gd', availableSections: ['Mark'] as BibleSection[] };\r\n\r\n  // Gothic\r\n  'got.Gothic' = { title: 'Gothic (Nehemiah NT Portions)', languageCode: 'got', availableSections: ['Neh', 'NT'] as BibleSection[] };\r\n\r\n  // Koine Greek\r\n  'grc.TextusReceptus' = { title: 'Textus Receptus', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.MajorityTextParsed' = { title: 'NT Byzantine Majority Text (2000) Parsed', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.MajorityText' = { title: 'NT Byzantine Majority Text (2000)', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.TextusReceptusParsed' = { title: 'NT Textus Receptus (1550 1894) Parsed', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.Tischendorf' = { title: 'NT Tischendorf 8th Ed', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.WestcottHortParsed' = { title: 'NT Westcott Hort UBS4 variants Parsed', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.WestcottHort' = { title: 'NT Westcott Hort UBS4 variants', languageCode: 'grc', availableSections: ['NT'] as BibleSection[] };\r\n  'grc.LXX' = { title: 'OT Septuaginta', languageCode: 'grc', availableSections: ['OT'] as BibleSection[] };\r\n  'grc.LXXParsed' = { title: 'OT Septuaginta with Roots Parsing', languageCode: 'grc', availableSections: ['OT'] as BibleSection[] };\r\n  'grc.LXXUnaccented' = { title: 'OT Septuaginta Unaccented', languageCode: 'grc', availableSections: ['OT'] as BibleSection[] };\r\n  'grc.LXXUnaccentedParsed' = { title: 'OT Septuaginta Unaccented with Roots Parsing', languageCode: 'grc', availableSections: ['OT'] as BibleSection[] };\r\n\r\n  // Manx Gaelic (Isle of Man)\r\n  'gv.ManxGaelic' = { title: 'Manx Gaelic', languageCode: 'gv', availableSections: ['Esth', 'Jonah', 'Gospels'] as BibleSection[] };\r\n\r\n  // Modern Hebrew\r\n  'he.ModernHebrew' = { title: 'Hebrew Modern', languageCode: 'he', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'he.OT' = { title: 'Hebrew OT', languageCode: 'he', availableSections: ['OT'] as BibleSection[] };\r\n\r\n  // Ancient Hebrew\r\n  'hbo.Aleppo' = { title: 'Aleppo Codex', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n  'hbo.BHSUnpointed' = { title: 'OT BHS (Consonants Only)', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n  'hbo.BHS' = { title: 'OT BHS (Consonants and Vowels)', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n  'hbo.WLCUnpointed' = { title: 'OT WLC (Consonants Only)', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n  'hbo.WLC' = { title: 'OT WLC (Consonants and Vowels)', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n  'hbo.WLC2' = { title: 'OT Westminster Leningrad Codex', languageCode: 'hbo', availableSections: ['OT'] as BibleSection[] };\r\n\r\n  // Hungarian\r\n  'hu.Karoli' = { title: 'Hungarian Karoli', languageCode: 'hu', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Croatian\r\n  'hr.CKK' = { title: 'Knjiga O Kristu', languageCode: 'hr', availableSections: ['NT'] as BibleSection[] };\r\n  'hr.Croatian' = { title: 'Croatian', languageCode: 'hr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Hungarian\r\n  'hu.HUN' = { title: 'Hungarian', languageCode: 'hu', availableSections: ['NT'] as BibleSection[] };\r\n  'hu.KAR' = { title: 'IBS-fordítás (Új Károli)', languageCode: 'hu', availableSections: ['OT'] as BibleSection[] };\r\n\r\n  // Armenian\r\n  'hy.EasternArmenian' = { title: 'Eastern', languageCode: 'hy', availableSections: ['Gen', 'Exod', 'Gospels'] as BibleSection[] };\r\n  'hy.WesternArmenian' = { title: 'Western NT', languageCode: 'hy', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Italian\r\n  'it.ITA' = { title: 'La Parola è Vita', languageCode: 'it', availableSections: ['NT'] as BibleSection[] };\r\n  'it.NRS' = { title: 'Nuova Riveduta 2006', languageCode: 'it', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'it.Giovanni' = { title: 'Giovanni Diodati Bible (1649)', languageCode: 'it', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'it.Riveduta' = { title: 'Riveduta Bible (1927)', languageCode: 'it', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Georgian\r\n  'ka.Georgian' = { title: 'Georgian', languageCode: 'ka', availableSections: ['Gospels', 'Acts', 'Jas'] as BibleSection[] };\r\n\r\n  // Kabyle (Algeria)\r\n  'kab.Kabyle' = { title: 'Kabyle NT', languageCode: 'kab', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Korean\r\n  'ko.Korean' = { title: 'Korean', languageCode: 'ko', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Latin\r\n  'la.VUL' = { title: 'Vulgata', languageCode: 'la', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'la.NewVulgate' = { title: 'Nova Vulgata', languageCode: 'la', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'la.Vulgate' = { title: 'Vulgata Clementina', languageCode: 'la', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Lithuanian\r\n  'lt.Lithuanian' = { title: 'Lithuanian', languageCode: 'lt', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Latvian\r\n  'lv.Latvian' = { title: 'Latvian NT', languageCode: 'lv', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Maori (New Zealand)\r\n  'mi.Maori' = { title: 'Maori', languageCode: 'mi', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Burmese (Myanmar)\r\n  'my.Judson' = { title: 'Judson (1835)', languageCode: 'my', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Dutch\r\n  'nl.HTB' = { title: 'Het Boek', languageCode: 'nl', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'nl.StatenVertaling' = { title: 'Dutch Staten Vertaling', languageCode: 'nl', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Norwegian\r\n  'no.NOR' = { title: 'En Levende Bok', languageCode: 'no', availableSections: ['NT'] as BibleSection[] };\r\n  'no.Bibelselskap' = { title: 'Bibelselskap (1930)', languageCode: 'no', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Potawatomi (Indigenous North American)\r\n  'pot.Potawatomi' = { title: 'Potawatomi (Lykins 1844)', languageCode: 'pot', availableSections: ['Matt', 'Acts'] as BibleSection[] };\r\n\r\n  // Polish\r\n  'pl.PSZ' = { title: 'Słowo Życia', languageCode: 'pl', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Uma (Indonesia)\r\n  'ppk.Uma' = { title: 'Uma NT', languageCode: 'ppk', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Portuguese\r\n  'pt.PRT' = { title: 'O Livro', languageCode: 'pt', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'pt.Almeida' = { title: 'Almeida Atualizada', languageCode: 'pt', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Romanian\r\n  'ro.NTR' = { title: 'Noua traducere în limba românã', languageCode: 'ro', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'ro.Cornilescu' = { title: 'Cornilescu', languageCode: 'ro', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Romani\r\n  'rom.ROM' = { title: 'Romani NT E Lashi Viasta', languageCode: 'rom', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Russian\r\n  'ru.CARS' = { title: 'Священное Писание, Восточный перевод', languageCode: 'ru', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'ru.RSZ' = { title: 'Новый перевод на русский язык', languageCode: 'ru', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'ru.Synodal' = { title: 'Synodal Translation (1876)', languageCode: 'ru', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'ru.Makarij' = { title: 'Makarij Translation Pentateuch (1825)', languageCode: 'ru', availableSections: ['Gen', 'Exod', 'Lev', 'Num', 'Deut'] as BibleSection[] };\r\n  'ru.Zhuromsky' = { title: 'Victor Zhuromsky NT', languageCode: 'ru', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Slovak\r\n  'sk.NPK' = { title: 'Nádej pre kazdého', languageCode: 'sk', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Albanian\r\n  'sq.Albanian' = { title: 'Albanian', languageCode: 'sq', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Swedish\r\n  'sv.BSV' = { title: 'Nya Levande Bibeln', languageCode: 'sv', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'sv.Swedish' = { title: 'Swedish (1917)', languageCode: 'sv', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Swahili (East Africa)\r\n  'sw.Swahili' = { title: 'Swahili', languageCode: 'sw', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Thai\r\n  'th.Thai' = { title: 'Thai from KJV', languageCode: 'th', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Tagalog (Philippines)\r\n  'tl.Tagalog' = { title: 'Ang Dating Biblia (1905)', languageCode: 'tl', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Turkish\r\n  'tr.TR' = { title: 'Türkçe', languageCode: 'tr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'tr.Turkish' = { title: 'Turkish', languageCode: 'tr', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'tr.TNT' = { title: 'Turkish NT (1987 1994)', languageCode: 'tr', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Tamajaq (Mali)\r\n  'ttq.Tamajaq' = { title: 'Portions of the Bible in Tamajaq', languageCode: 'ttq', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Ukrainian\r\n  'uk.Ukranian' = { title: 'Ukranian NT (P Kulish 1871)', languageCode: 'uk', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Vietnamese\r\n  'vi.Vietnamese' = { title: 'Vietnamese (1934)', languageCode: 'vi', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Wolof (West Africa)\r\n  'wo.Wolof' = { title: 'Wolof NT', languageCode: 'wo', availableSections: ['NT'] as BibleSection[] };\r\n\r\n  // Xhosa (Southern Africa)\r\n  'xh.Xhosa' = { title: 'Xhosa', languageCode: 'xh', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n\r\n  // Chinese\r\n  'za.CCBT' = { title: '聖經當代譯本修訂版', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'za.CUVS' = { title: '中文和合本（简体）', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'za.CNT' = { title: 'NCV Traditional', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'za.CUS' = { title: 'Union Simplified', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'za.CNS' = { title: 'NCV Simplified', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n  'za.CUT' = { title: 'Union Traditional', languageCode: 'za', availableSections: ['OT', 'NT'] as BibleSection[] };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/versions/bible-versions.const.ts","/**\r\n * Based on https://github.com/shogogg/ts-deferred ((c) 2016 shogogg, MIT)\r\n */\r\nexport type Resolver<T> = (value?: T | PromiseLike<T>) => void;\r\n\r\nexport type Rejecter = (reason?: any) => void;\r\n\r\nexport class Deferred<T> {\r\n  private _promise: Promise<T>;\r\n  private _resolve?: Resolver<T>;\r\n  private _reject?: Rejecter;\r\n\r\n  constructor() {\r\n    this._promise = new Promise<T>((resolve: Resolver<T>, reject: Rejecter) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n  }\r\n\r\n  get promise(): Promise<T> {\r\n    return this._promise;\r\n  }\r\n\r\n  resolve = (value?: T | PromiseLike<T>): void => {\r\n    this._resolve && this._resolve(value);\r\n  }\r\n\r\n  reject = (reason?: any): void => {\r\n    this._reject && this._reject(reason);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/deferred.class.ts","import { GetBibleBibleApi } from 'src/bible/bible-api/get-bible-bible-api.class';\r\nimport { BibleApi } from 'src/bible/bible-api/bible-api.class';\r\n\r\nexport type BibleApiName = 'getBible';\r\n\r\nexport function getBibleApi(name: BibleApiName): BibleApi {\r\n  return name === 'getBible' ? new GetBibleBibleApi() : new GetBibleBibleApi();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/bible-api/bible-api-overview.ts","import { BibleApi } from 'src/bible/bible-api/bible-api.class';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\nimport { executeJsonp } from 'src/helpers/jsonp';\r\nimport { BibleVersionMap } from 'src/bible/bible.class';\r\nimport { transformOsis, BookNameMap } from 'src/helpers/osis';\r\n\r\ninterface VerseResponse {\r\n  type: 'verse';\r\n  version: string;\r\n  direction: 'LTR' | 'RTL';\r\n  book: [{\r\n    book_ref: string;\r\n    book_name: string;\r\n    book_nr: number | string;\r\n    chapter_nr: number | string;\r\n    chapter: {\r\n      [key: string]: {\r\n        verse_nr: number | string;\r\n        verse: string;\r\n      }\r\n    };\r\n  }];\r\n}\r\n\r\ninterface ChapterResponse {\r\n  type: 'chapter';\r\n  version: string;\r\n  book_name: string;\r\n  book_nr: number | string;\r\n  chapter_nr: number | string;\r\n  direction: 'LTR' | 'RTL';\r\n  chapter: {\r\n    [key: string]: {\r\n      verse_nr: number | string;\r\n      verse: string;\r\n    }\r\n  };\r\n}\r\n\r\ntype Response = VerseResponse | ChapterResponse;\r\n\r\nexport class GetBibleBibleApi extends BibleApi {\r\n\r\n  protected readonly bibleVersionMap: BibleVersionMap = {\r\n    'af.AOV': 'aov',\r\n    'sq.Albanian': 'albanian',\r\n    'am.HSAB': 'hsab',\r\n    'am.Amharic': 'amharic',\r\n    'ar.ArabicSV': 'arabicsv',\r\n    'arc.Peshitta': 'peshitta',\r\n    'hy.EasternArmenian': 'easternarmenian',\r\n    'hy.WesternArmenian': 'westernarmenian',\r\n    'eu.Basque': 'basque',\r\n    'br.Breton': 'breton',\r\n    'bg.Bulgarian1940': 'bulgarian1940',\r\n    'ch.Chamorro': 'chamorro',\r\n    'za.CNT': 'cnt',\r\n    'za.CUS': 'cus',\r\n    'za.CNS': 'cns',\r\n    'za.CUT': 'cut',\r\n    'cop.Bohairic': 'bohairic',\r\n    'cop.Coptic': 'coptic',\r\n    'cop.Sahidic': 'sahidic',\r\n    'hr.Croatian': 'croatia',\r\n    'cs.BKR': 'bkr',\r\n    'cs.CEP': 'cep',\r\n    'cs.KMS': 'kms',\r\n    'cs.NKB': 'nkb',\r\n    'da.Danish': 'danish',\r\n    'nl.StatenVertaling': 'statenvertaling',\r\n    'en.KJV': 'kjv',\r\n    'en.AKJV': 'akjv',\r\n    'en.ASV': 'asv',\r\n    'en.BasicEnglish': 'basicenglish',\r\n    'en.Darby': 'darby',\r\n    'en.YLT': 'ylt',\r\n    'en.WEB': 'web',\r\n    'en.WB': 'wb',\r\n    'en.DouayRheims': 'douayrheims',\r\n    'en.Weymouth': 'weymouth',\r\n    'eo.Esperanto': 'esperanto',\r\n    'et.Estonian': 'estonian',\r\n    'fi.Finnish1776': 'finnish1776',\r\n    'fi.PyhaRaamattu1933': 'pyharaamattu1933',\r\n    'fi.PyhaRaamattu1992': 'pyharaamattu1992',\r\n    'fr.Martin': 'martin',\r\n    'fr.LS1910': 'ls1910',\r\n    'fr.Ostervald1996': 'ostervald',\r\n    'ka.Georgian': 'georgian',\r\n    'de.LUT1912': 'luther1912',\r\n    'de.ELB1871': 'elberfelder',\r\n    'de.ELB1905': 'elberfelder1905',\r\n    'de.LUT1545': 'luther1545',\r\n    'de.SLT1951': 'schlachter',\r\n    'got.Gothic': 'gothic',\r\n    'el.ModernGreek': 'moderngreek',\r\n    'grc.TextusReceptus': 'text',\r\n    'grc.MajorityTextParsed': 'majoritytext',\r\n    'grc.MajorityText': 'byzantine',\r\n    'grc.TextusReceptusParsed': 'textusreceptus',\r\n    'grc.Tischendorf': 'tischendorf',\r\n    'grc.WestcottHortParsed': 'westcotthort',\r\n    'grc.WestcottHort': 'westcott',\r\n    'grc.LXXParsed': 'lxxpar',\r\n    'grc.LXX': 'lxx',\r\n    'grc.LXXUnaccentedParsed': 'lxxunaccentspar',\r\n    'grc.LXXUnaccented': 'lxxunaccents',\r\n    'he.ModernHebrew': 'modernhebrew',\r\n    'hbo.Aleppo': 'aleppo',\r\n    'hbo.BHSUnpointed': 'bhsnovowels',\r\n    'hbo.BHS': 'bhs',\r\n    'hbo.WLCUnpointed': 'wlcnovowels',\r\n    'hbo.WLC': 'wlc',\r\n    'hbo.WLC2': 'codex',\r\n    'hu.Karoli': 'karoli',\r\n    'it.Giovanni': 'giovanni',\r\n    'it.Riveduta': 'riveduta',\r\n    'kab.Kabyle': 'kabyle',\r\n    'ko.Korean': 'korean',\r\n    'la.NewVulgate': 'newvulgate',\r\n    'la.Vulgate': 'vulgate',\r\n    'lv.Latvian': 'latvian',\r\n    'lt.Lithuanian': 'lithuanian',\r\n    'gv.ManxGaelic': 'manxgaelic',\r\n    'mi.Maori': 'maori',\r\n    'my.Judson': 'judson',\r\n    'no.Bibelselskap': 'bibelselskap',\r\n    'pt.Almeida': 'almeida',\r\n    'pot.Potawatomi': 'potawatomi',\r\n    'rom.ROM': 'rom',\r\n    'ro.Cornilescu': 'cornilescu',\r\n    'ru.Synodal': 'synodal',\r\n    'ru.Makarij': 'makarij',\r\n    'ru.Zhuromsky': 'zhuromsky',\r\n    'gd.Gaelic': 'gaelic',\r\n    'es.Valera': 'valera',\r\n    'es.RV1858': 'rv1858',\r\n    'es.SSE': 'sse',\r\n    'sw.Swahili': 'swahili',\r\n    'sv.Swedish': 'swedish',\r\n    'tl.Tagalog': 'tagalog',\r\n    'ttq.Tamajaq': 'tamajaq',\r\n    'th.Thai': 'thai',\r\n    'tr.Turkish': 'turkish',\r\n    'tr.TNT': 'tnt',\r\n    'uk.Ukranian': 'ukranian',\r\n    'ppk.Uma': 'uma',\r\n    'vi.Vietnamese': 'vietnamese',\r\n    'wo.Wolof': 'wolof',\r\n    'xh.Xhosa': 'xhosa'\r\n  };\r\n\r\n  private bookNameMap: BookNameMap = {\r\n    Exod: 'Exo',\r\n    Deut: 'Deu',\r\n    Josh: 'Jos',\r\n    Judg: 'Jud',\r\n    '1Kgs': '1Kg',\r\n    '2Kgs': '2Kg',\r\n    Ezra: 'Ezr',\r\n    Esth: 'Est',\r\n    Prov: 'Pro',\r\n    Eccl: 'Ecc',\r\n    Ezek: 'Eze',\r\n    Matt: 'Mat',\r\n    Jas: 'Jam'\r\n  };\r\n\r\n  public getPassage(osis: string, bibleVersion: BibleVersionCode): Promise<string> {\r\n    osis = transformOsis(osis, { bookNameMap: this.bookNameMap });\r\n    return executeJsonp<Response>(\r\n      `http://getbible.net/json?p=${osis}&v=${this.bibleVersionMap[bibleVersion]}`, 'getbible'\r\n    ).then(result => {\r\n      let output = '';\r\n      let chapterObject: ChapterResponse['chapter'] | undefined = undefined;\r\n      if (result.type === 'verse') {\r\n        if (result.book.length !== 1) {\r\n          throw new Error('GetBibleBibleApi::getPassage() - Multiple books not supported');\r\n        }\r\n        chapterObject = result.book[0].chapter;\r\n      } else if (result.type === 'chapter') {\r\n        chapterObject = result.chapter;\r\n      }\r\n      if (chapterObject) {\r\n        for (const chapterIndex in chapterObject) {\r\n          if (chapterObject.hasOwnProperty(chapterIndex)) {\r\n            const chapter = chapterObject[chapterIndex];\r\n            output += `\r\n<span class=\"bxVerse\">\r\n  <span class=\"bxVerseNumber\">\r\n    ${chapter.verse_nr}\r\n  </span>\r\n  ${chapter.verse.trim()}\r\n</span>`;\r\n          }\r\n        }\r\n      }\r\n      return output;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/bible-api/get-bible-bible-api.class.ts","import { Bible } from 'src/bible/bible.class';\r\nimport { BibleVersionCode } from 'src/bible/versions/bible-versions.const';\r\n\r\nexport abstract class BibleApi extends Bible {\r\n  public abstract getPassage(osis: string, bibleVersion: BibleVersionCode): Promise<string>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible/bible-api/bible-api.class.ts","import { loadScript } from 'src/helpers/dom';\r\n\r\nlet jsonpCounter = -1;\r\n\r\nexport function executeJsonp<T extends object = object>(url: string, callbackParameter: string): Promise<T> {\r\n  return new Promise((resolve, reject) => {\r\n    const callbackName = `blinxJsonpCallbacks_${++jsonpCounter}`;\r\n    (window as any)[callbackName] = (result: object) => {\r\n      delete (window as any)[callbackName];\r\n      resolve(result as T);\r\n    };\r\n    const completeUrl = `${url}${url.indexOf('?') === -1 ? '?' : '&'}${callbackParameter}=${callbackName}`;\r\n    loadScript(completeUrl, (successful) => {\r\n      if (!successful) {\r\n        delete (window as any)[callbackName];\r\n        reject(false);\r\n      }\r\n    });\r\n  });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/jsonp.ts","import { loadScript } from 'src/helpers/dom';\r\n\r\n/** Load polyfills if required */\r\nexport function loadPolyfills(callback?: (successful: boolean) => void) {\r\n  if ('Promise' in window) {\r\n    if (callback) {\r\n      callback(true);\r\n    }\r\n  } else {\r\n    loadScript(`https://cdn.polyfill.io/v2/polyfill.js?features=Promise|gated`, callback);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/polyfills.ts"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;ACEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAqBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAWA;;;;;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;;;;;;ACxDA;AACA;;;;;;;;;ACAA;AAGA;AAAA;AAuDA;AArDA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvDA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACLA;AAOA;AAAA;AAkBA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAlBA;;;;;;;;;;ACPA;AAEA;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AASA;AACA;AAAA;AARA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AApOA;;;;;;;;;;ACfA;AAEA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AAJA;AACA;AACA;AACA;AACA;AAAA;AA3DA;;;;;;;;;;;;;;;;;;;;ACJA;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAFA;;;;;;;;;;ACMA;;;AAGA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAnRA;;;;;;;;;;ACNA;AAKA;AAAA;AAWA;AACA;AACA;AAEA;AACA;AACA;AAhBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;AAAA;AASA;AAAA;AAvBA;;;;;;;;;;ACPA;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AAEA;AAqkCA;AAhCA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA/JA;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAFA;;;;;;;;;;ACHA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;;;;A","sourceRoot":""}