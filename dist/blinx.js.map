{"version":3,"file":"blinx.js","sources":["webpack:///webpack/bootstrap de155785b23414894f9d","webpack:///../node_modules/umbrellajs/umbrella.min.js","webpack:///./parser/parser.class.ts","webpack:///./helpers/dom.ts","webpack:///../node_modules/lodash/_Symbol.js","webpack:///./main.ts","webpack:///./blinx.class.ts","webpack:///./options/options.ts","webpack:///./helpers/polyfills.ts","webpack:///../node_modules/lodash/isString.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///./online-bible/online-bible-overview.ts","webpack:///./online-bible/bible-server-online-bible.class.ts","webpack:///./online-bible/online-bible.class.ts","webpack:///./bible-versions/bible-versions.const.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap de155785b23414894f9d","/* Umbrella JS 2.10.0 umbrellajs.com */\nfunction ajax(a,b,c,d){c=c||function(){},b=b||{},b.body=b.body||{},b.method=(b.method||\"GET\").toUpperCase(),b.headers=b.headers||{},b.headers[\"X-Requested-With\"]=b.headers[\"X-Requested-With\"]||\"XMLHttpRequest\",\"undefined\"!=typeof window.FormData&&b.body instanceof window.FormData||(b.headers[\"Content-Type\"]=b.headers[\"Content-Type\"]||\"application/x-www-form-urlencoded\"),/json/.test(b.headers[\"Content-Type\"])&&(b.body=JSON.stringify(b.body)),\"object\"!=typeof b.body||b.body instanceof window.FormData||(b.body=u().param(b.body));var e=new window.XMLHttpRequest;u(e).on(\"error timeout abort\",function(){c(new Error,null,e)}).on(\"load\",function(){var a=/^(4|5)/.test(e.status)?new Error(e.status):null,b=parseJson(e.response)||e.response;return c(a,b,e)}),e.open(b.method,a),e.withCredentials=!0;for(var f in b.headers)e.setRequestHeader(f,b.headers[f]);return d&&d(e),e.send(b.body),e}function parseJson(a){try{var b=JSON.parse(a);if(b&&\"object\"==typeof b)return b}catch(c){}return!1}var u=function(a,b){return this instanceof u?a instanceof u?a:(\"string\"==typeof a&&(a=this.select(a,b)),a&&a.nodeName&&(a=[a]),void(this.nodes=this.slice(a))):new u(a,b)};u.prototype={get length(){return this.nodes.length}},u.prototype.nodes=[],u.prototype.addClass=function(){return this.eacharg(arguments,function(a,b){a.classList.add(b)})},u.prototype.adjacent=function(a,b,c){return\"number\"==typeof b&&(b=0===b?[]:new Array(b).join().split(\",\").map(Number.call,Number)),this.each(function(d,e){var f=document.createDocumentFragment();u(b||{}).map(function(b,c){var f=\"function\"==typeof a?a.call(this,b,c,d,e):a;return\"string\"==typeof f?this.generate(f):u(f)}).each(function(a){this.isInPage(a)?f.appendChild(u(a).clone().first()):f.appendChild(a)}),c.call(this,d,f)})},u.prototype.after=function(a,b){return this.adjacent(a,b,function(a,b){a.parentNode.insertBefore(b,a.nextSibling)})},u.prototype.ajax=function(a,b){return this.handle(\"submit\",function(c){ajax(u(this).attr(\"action\"),{body:u(this).serialize(),method:u(this).attr(\"method\")},a&&a.bind(this),b&&b.bind(this))})},u.prototype.append=function(a,b){return this.adjacent(a,b,function(a,b){a.appendChild(b)})},u.prototype.args=function(a,b,c){return\"function\"==typeof a&&(a=a(b,c)),\"string\"!=typeof a&&(a=this.slice(a).map(this.str(b,c))),a.toString().split(/[\\s,]+/).filter(function(a){return a.length})},u.prototype.array=function(a){a=a;var b=this;return this.nodes.reduce(function(c,d,e){var f;return a?(f=a.call(b,d,e),f||(f=!1),\"string\"==typeof f&&(f=u(f)),f instanceof u&&(f=f.nodes)):f=d.innerHTML,c.concat(f!==!1?f:[])},[])},u.prototype.attr=function(a,b,c){return c=c?\"data-\":\"\",this.pairs(a,b,function(a,b){return a.getAttribute(c+b)},function(a,b,d){a.setAttribute(c+b,d)})},u.prototype.before=function(a,b){return this.adjacent(a,b,function(a,b){a.parentNode.insertBefore(b,a)})},u.prototype.children=function(a){return this.map(function(a){return this.slice(a.children)}).filter(a)},u.prototype.clone=function(){return this.map(function(a,b){var c=a.cloneNode(!0),d=this.getAll(c);return this.getAll(a).each(function(a,b){for(var c in this.mirror)this.mirror[c](a,d.nodes[b])}),c})},u.prototype.getAll=function(a){return u([a].concat(u(\"*\",a).nodes))},u.prototype.mirror={},u.prototype.mirror.events=function(a,b){if(a._e)for(var c in a._e)a._e[c].forEach(function(a){u(b).on(c,a)})},u.prototype.mirror.select=function(a,b){u(a).is(\"select\")&&(b.value=a.value)},u.prototype.mirror.textarea=function(a,b){u(a).is(\"textarea\")&&(b.value=a.value)},u.prototype.closest=function(a){return this.map(function(b){do if(u(b).is(a))return b;while((b=b.parentNode)&&b!==document)})},u.prototype.data=function(a,b){return this.attr(a,b,!0)},u.prototype.each=function(a){return this.nodes.forEach(a.bind(this)),this},u.prototype.eacharg=function(a,b){return this.each(function(c,d){this.args(a,c,d).forEach(function(a){b.call(this,c,a)},this)})},u.prototype.empty=function(){return this.each(function(a){for(;a.firstChild;)a.removeChild(a.firstChild)})},u.prototype.filter=function(a){var b=function(b){return b.matches=b.matches||b.msMatchesSelector||b.webkitMatchesSelector,b.matches(a||\"*\")};return\"function\"==typeof a&&(b=a),a instanceof u&&(b=function(b){return a.nodes.indexOf(b)!==-1}),u(this.nodes.filter(b))},u.prototype.find=function(a){return this.map(function(b){return u(a||\"*\",b)})},u.prototype.first=function(){return this.nodes[0]||!1},u.prototype.generate=function(a){return/^\\s*<t(h|r|d)/.test(a)?u(document.createElement(\"table\")).html(a).children().nodes:/^\\s*</.test(a)?u(document.createElement(\"div\")).html(a).children().nodes:document.createTextNode(a)},u.prototype.handle=function(){var a=this.slice(arguments).map(function(a){return\"function\"==typeof a?function(b){b.preventDefault(),a.apply(this,arguments)}:a},this);return this.on.apply(this,a)},u.prototype.hasClass=function(){return this.is(\".\"+this.args(arguments).join(\".\"))},u.prototype.html=function(a){return void 0===a?this.first().innerHTML||\"\":this.each(function(b){b.innerHTML=a})},u.prototype.is=function(a){return this.filter(a).length>0},u.prototype.isInPage=function(a){return a!==document.body&&document.body.contains(a)},u.prototype.last=function(){return this.nodes[this.length-1]||!1},u.prototype.map=function(a){return a?u(this.array(a)).unique():this},u.prototype.not=function(a){return this.filter(function(b){return!u(b).is(a||!0)})},u.prototype.off=function(a){return this.eacharg(a,function(a,b){u(a._e?a._e[b]:[]).each(function(c){a.removeEventListener(b,c)})})},u.prototype.on=function(a,b,c){if(\"string\"==typeof b){var d=b;b=function(a){var b=arguments;u(a.currentTarget).find(d).each(function(d){if(d===a.target||d.contains(a.target)){try{Object.defineProperty(a,\"currentTarget\",{get:function(){return d}})}catch(e){}c.apply(d,b)}})}}var e=function(a){return b.apply(this,[a].concat(a.detail||[]))};return this.eacharg(a,function(a,b){a.addEventListener(b,e),a._e=a._e||{},a._e[b]=a._e[b]||[],a._e[b].push(e)})},u.prototype.pairs=function(a,b,c,d){if(\"undefined\"!=typeof b){var e=a;a={},a[e]=b}return\"object\"==typeof a?this.each(function(b){for(var c in a)d(b,c,a[c])}):this.length?c(this.first(),a):\"\"},u.prototype.param=function(a){return Object.keys(a).map(function(b){return this.uri(b)+\"=\"+this.uri(a[b])}.bind(this)).join(\"&\")},u.prototype.parent=function(a){return this.map(function(a){return a.parentNode}).filter(a)},u.prototype.prepend=function(a,b){return this.adjacent(a,b,function(a,b){a.insertBefore(b,a.firstChild)})},u.prototype.remove=function(){return this.each(function(a){a.parentNode&&a.parentNode.removeChild(a)})},u.prototype.removeClass=function(){return this.eacharg(arguments,function(a,b){a.classList.remove(b)})},u.prototype.replace=function(a,b){var c=[];return this.adjacent(a,b,function(a,b){c=c.concat(this.slice(b.children)),a.parentNode.replaceChild(b,a)}),u(c)},u.prototype.scroll=function(){return this.first().scrollIntoView({behavior:\"smooth\"}),this},u.prototype.select=function(a,b){if(a=a.replace(/^\\s*/,\"\").replace(/\\s*$/,\"\"),b)return this.select.byCss(a,b);for(var c in this.selectors)if(b=c.split(\"/\"),new RegExp(b[1],b[2]).test(a))return this.selectors[c](a);return this.select.byCss(a)},u.prototype.select.byCss=function(a,b){return(b||document).querySelectorAll(a)},u.prototype.selectors={},u.prototype.selectors[/^\\.[\\w\\-]+$/]=function(a){return document.getElementsByClassName(a.substring(1))},u.prototype.selectors[/^\\w+$/]=function(a){return document.getElementsByTagName(a)},u.prototype.selectors[/^\\#[\\w\\-]+$/]=function(a){return document.getElementById(a.substring(1))},u.prototype.selectors[/^</]=function(a){return u().generate(a)},u.prototype.serialize=function(){var a=this;return this.slice(this.first().elements).reduce(function(b,c){return!c.name||c.disabled||\"file\"===c.type?b:/(checkbox|radio)/.test(c.type)&&!c.checked?b:\"select-multiple\"===c.type?(u(c.options).each(function(d){d.selected&&(b+=\"&\"+a.uri(c.name)+\"=\"+a.uri(d.value))}),b):b+\"&\"+a.uri(c.name)+\"=\"+a.uri(c.value)},\"\").slice(1)},u.prototype.siblings=function(a){return this.parent().children(a).not(this)},u.prototype.size=function(){return this.first().getBoundingClientRect()},u.prototype.slice=function(a){return a&&0!==a.length&&\"string\"!=typeof a&&\"[object Function]\"!==a.toString()?a.length?[].slice.call(a.nodes||a):[a]:[]},u.prototype.str=function(a,b){return function(c){return\"function\"==typeof c?c.call(this,a,b):c.toString()}},u.prototype.text=function(a){return void 0===a?this.first().textContent||\"\":this.each(function(b){b.textContent=a})},u.prototype.toggleClass=function(a,b){return!!b===b?this[b?\"addClass\":\"removeClass\"](a):this.eacharg(a,function(a,b){a.classList.toggle(b)})},u.prototype.trigger=function(a){var b=this.slice(arguments).slice(1);return this.eacharg(a,function(a,c){var d,e={bubbles:!0,cancelable:!0,detail:b};try{d=new window.CustomEvent(c,e)}catch(f){d=document.createEvent(\"CustomEvent\"),d.initCustomEvent(c,!0,!0,b)}a.dispatchEvent(d)})},u.prototype.unique=function(){return u(this.nodes.reduce(function(a,b){var c=null!==b&&void 0!==b&&b!==!1;return c&&a.indexOf(b)===-1?a.concat(b):a},[]))},u.prototype.uri=function(a){return encodeURIComponent(a).replace(/!/g,\"%21\").replace(/'/g,\"%27\").replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\").replace(/\\*/g,\"%2A\").replace(/%20/g,\"+\")},u.prototype.wrap=function(a){function b(a){for(;a.firstElementChild;)a=a.firstElementChild;return u(a)}return this.map(function(c){return u(a).each(function(a){b(a).append(c.cloneNode(!0)),c.parentNode.replaceChild(a,c)})})},\"object\"==typeof module&&module.exports&&(module.exports={u:u,ajax:ajax});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/umbrellajs/umbrella.min.js\n// module id = 0\n// module chunks = 0","import { LanguageCode } from '../options/languages';\r\nimport { loadScript } from '../helpers/dom';\r\nimport { Options } from '../options/options';\r\n\r\nexport class Parser {\r\n  private _bcv?: BCV.Parser;\r\n  public get bcv(): BCV.Parser {\r\n    if (this._bcv) {\r\n      return this._bcv;\r\n    }\r\n    throw new Error('The bcv_parser script has not been loaded successfully yet.');\r\n  }\r\n  static getCurrentParserLanguage(): LanguageCode | false {\r\n    if (window.bcv_parser) {\r\n      const parser: BCV.Parser = new window.bcv_parser();\r\n      if (parser['languages'] && parser['languages'].length === 1) {\r\n        return parser['languages'][0] as LanguageCode;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Load bcv parser script for the given language */\r\n  public load(options: Options, callback?: (successful: boolean) => void) {\r\n    if (Parser.getCurrentParserLanguage() === options.language) {\r\n      this.initBcvParser(options);\r\n      this._bcv = this._bcv || new window.bcv_parser();\r\n      if (callback) {\r\n        callback(true);\r\n      }\r\n    } else {\r\n      loadScript(`https://cdn.rawgit.com/openbibleinfo/Bible-Passage-Reference-Parser/537560a7/js/${options.language}_bcv_parser.js`, successful => {\r\n        if (successful) {\r\n          this.initBcvParser(options);\r\n        }\r\n        if (callback) {\r\n          callback(successful);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private initBcvParser(options: Options) {\r\n    this._bcv = this._bcv || new window.bcv_parser();\r\n    options.parserOptions = options.parserOptions || {};\r\n    if (Parser.getCurrentParserLanguage() === 'de') {\r\n      if (!('punctuation_strategy' in options.parserOptions)) {\r\n        options.parserOptions.punctuation_strategy = 'eu';\r\n      }\r\n    }\r\n    if (!('sequence_combination_strategy' in options.parserOptions)) {\r\n      options.parserOptions.sequence_combination_strategy = 'separate';\r\n    }\r\n    if (options.parserOptions) {\r\n      this._bcv.set_options(options.parserOptions);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./parser/parser.class.ts","/** Load script for the given src dynamicaly & asynchronously */\r\nexport function loadScript(src: string, callback?: (successful: boolean) => void) {\r\n  const script = document.createElement('script');\r\n  script.src = src;\r\n  if (callback) {\r\n    script.onload = () => callback(true);\r\n    script.onerror = () => callback(false);\r\n  }\r\n  document.body.appendChild(script);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/dom.ts","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_Symbol.js\n// module id = 3\n// module chunks = 0","import { Blinx } from './blinx.class';\r\n\r\nwindow.blinx = new Blinx();\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./main.ts","import { Options, applyScriptTagOptions } from './options/options';\r\nimport { loadPolyfills } from './helpers/polyfills';\r\nimport { Parser } from './parser/parser.class';\r\nimport { u } from 'umbrellajs';\r\nimport { OnlineBible } from './online-bible/online-bible.class';\r\nimport isString = require('lodash/isString');\r\nimport { getOnlineBible } from './online-bible/online-bible-overview';\r\nimport { BibleVersionCode } from './bible-versions/bible-versions.const';\r\n\r\nexport class Blinx {\r\n\r\n  private options = new Options();\r\n  private parser = new Parser();\r\n  private onlineBible: OnlineBible;\r\n\r\n  /** Initialise blinx. */\r\n  constructor() {\r\n    applyScriptTagOptions(this.options);\r\n    this.onlineBible = getOnlineBible(this.options.onlineBible);\r\n    let pending = 2;\r\n    const callback = (successful: boolean) => {\r\n      if (successful) {\r\n        pending--;\r\n        if (pending === 0) {\r\n          this.initComplete();\r\n        }\r\n      }\r\n    };\r\n    this.parser.load(this.options, callback);\r\n    loadPolyfills(callback);\r\n    this.initComplete();\r\n  }\r\n\r\n  /** Execute a parse for the given options. */\r\n  public execute(): void {\r\n    // Search within all whitelisted selectors\r\n    u(this.options.whitelist.length ? `${this.options.whitelist.join(' *, ')} *` : 'body')\r\n      // Exclude blacklisted selectors\r\n      .not(this.options.blacklist.join(', '))\r\n      .not(this.options.blacklist.length ? `${this.options.blacklist.join(' *, ')} *` : '')\r\n      // Go one level deeper to get text nodes; NB: This does not keep the order or nodes\r\n      // .map(node => node.hasChildNodes() && Array.prototype.slice.call(node.childNodes))\r\n      .each(node => this.parseReferencesInNode(node));\r\n  }\r\n\r\n  /** Second step of initialisation after parser & polyfills loaded. */\r\n  private initComplete(): void {\r\n    if (this.options.parseAutomatically) {\r\n      if (/^complete|interactive|loaded$/.test(document.readyState)) {\r\n        // DOM already parsed\r\n        this.execute();\r\n      } else {\r\n        // DOM content not yet loaded\r\n        const handler = () => {\r\n          u(document).off('DOMContentLoaded', handler);\r\n          this.execute();\r\n        };\r\n        u(document).on('DOMContentLoaded', handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Look for and link all references found in the text node children of the given node.\r\n   * @param node Any\r\n   */\r\n  private parseReferencesInNode(node: Node): void {\r\n    const childNodes = Array.prototype.slice.call(node.childNodes);\r\n    for (const childNode of childNodes) {\r\n      if (this.isTextNode(childNode)) {\r\n        // Look for all complete Bible references\r\n        this.parser.bcv.parse(childNode.textContent || '');\r\n        const refs = this.parser.bcv.osis_and_indices();\r\n        this.handleReferencesFoundInText(childNode, refs);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Link the given reference and continue looking for further (partial) references in the remaining text.\r\n   * @param node Text node the given reference was found in\r\n   * @param ref bcv_parser reference object\r\n   */\r\n  private handleReferencesFoundInText(node: Text, refs: BCV.OsisAndIndices[]): void {\r\n    for (let i = refs.length - 1; i >= 0; i--) {\r\n      const ref = refs[i];\r\n      const remainder = node.splitText(ref.indices[1]);\r\n      const passage = node.splitText(ref.indices[0]);\r\n      if (passage) { // Always true in this case\r\n        this.addLink(passage, ref);\r\n      }\r\n      this.parsePartialReferencesInText(remainder, this.convertOsisToContext(ref.osis));\r\n    }\r\n  }\r\n\r\n  private convertOsisToContext(osis: string): string {\r\n    const separator = this.options.parserOptions && this.options.parserOptions.punctuation_strategy === 'eu' ? ',' : ':';\r\n    return osis.replace(/(\\d)\\.(\\d)/, `$1${separator}$2`).replace('.', ' ');\r\n  }\r\n\r\n  /**\r\n   * Look for and link partial references in the given text node.\r\n   * Unfortunately, bcv.parse_with_context() only works, if the string\r\n   * *starts* with the partial passage, so the beginning needs to be\r\n   * determined by searching for chapter/verse numbers.\r\n   * @param node Text node\r\n   * @param previousPassage Previous recognized passage as parser context\r\n   */\r\n  private parsePartialReferencesInText(node: Text, previousPassage: string): void {\r\n    const text = node.textContent || '';\r\n    // Search for first number\r\n    const match = text.match(/\\d/);\r\n    // TODO: Check support of match.index\r\n    if (match && typeof match.index !== 'undefined') {\r\n      let possibleReferenceWithPrefix: string = '';\r\n      const possibleReferenceWithoutPrefix = text.slice(match.index);\r\n      let offset = 0;\r\n      if (match.index > 0) {\r\n        // Check if it is preceded by a prefix (which could be 'chapter ' or 'vs.' etc.)\r\n        const preceding = text.slice(0, match.index);\r\n        const matchPrefix = preceding.match(/\\w+\\.?\\s*$/);\r\n        if (matchPrefix) {\r\n          possibleReferenceWithPrefix = matchPrefix[0] + possibleReferenceWithoutPrefix;\r\n          offset = match.index - matchPrefix[0].length;\r\n        }\r\n      }\r\n      // Check for possible reference with prefix first\r\n      if (possibleReferenceWithPrefix) {\r\n        this.parser.bcv.parse_with_context(possibleReferenceWithPrefix, previousPassage);\r\n      }\r\n      // If none available or unsuccessful, check for possible reference starting with number(s)\r\n      if (!possibleReferenceWithPrefix || !this.parser.bcv.osis()) {\r\n        this.parser.bcv.parse_with_context(possibleReferenceWithoutPrefix, previousPassage);\r\n        offset = match.index;\r\n      }\r\n      // If either successful, adjust the indices due to the slice above and handle the reference\r\n      const refs = this.parser.bcv.osis_and_indices();\r\n      if (refs.length) {\r\n        for (const ref of refs) {\r\n          ref.indices[0] += offset;\r\n          ref.indices[1] += offset;\r\n        }\r\n        this.handleReferencesFoundInText(node, refs);\r\n      }\r\n    }\r\n  }\r\n\r\n  private isTextNode(node: Node): node is Text {\r\n    return node.nodeType === node.TEXT_NODE;\r\n  }\r\n\r\n  private addLink(node: Node, ref: BCV.OsisAndIndices): void {\r\n    let versionCode = isString(this.options.bibleVersion) ? this.options.bibleVersion : this.options.bibleVersion.bibleText;\r\n    // If the versionCode does not match the given language, find the first version available for the given online Bible for this language\r\n    if (versionCode.indexOf(this.options.language) !== 0) {\r\n      const availableVersions = Object.keys(this.onlineBible.getAvailableVersions(this.options.language)) as BibleVersionCode[];\r\n      if (availableVersions.length) {\r\n        versionCode = availableVersions[0];\r\n      }\r\n    }\r\n    u(node)\r\n      .wrap(`<a></a>`)\r\n      .attr('href', this.onlineBible.getPassageLink(ref.osis, versionCode))\r\n      .data('osis', ref.osis);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./blinx.class.ts","import { Languages } from './languages';\r\nimport { u } from 'umbrellajs';\r\nimport { Parser } from '../parser/parser.class';\r\nimport { BibleVersionCode } from '../bible-versions/bible-versions.const';\r\nimport { OnlineBibleName } from '../online-bible/online-bible-overview';\r\n\r\nexport class Options {\r\n  [key: string]: any;\r\n\r\n  /** Language code of the language to be used for the parser. */\r\n  language: keyof Languages = 'en';\r\n  /** Code of the bible version to be used, for the displayed Bible text and the online Bible being linked to. */\r\n  bibleVersion: BibleVersionCode | { bibleText: BibleVersionCode, onlineBible: BibleVersionCode } = 'en.ESV';\r\n  /** Online Bible to be linked to. */\r\n  onlineBible: OnlineBibleName = 'BibleServer';\r\n  /**\r\n   * Futher options for the parser.\r\n   * @see https://github.com/openbibleinfo/Bible-Passage-Reference-Parser#options\r\n   */\r\n  parserOptions?: BCV.Options;\r\n  /** By default, the parse will start automatically once the page is loaded. If false, it needs to be triggered manually. */\r\n  parseAutomatically: boolean = true;\r\n  /** Automatic parsing will happen within the elements with the following whitelisted selectors. */\r\n  whitelist: string[] = ['body'];\r\n  /** Automatic parsing can be disabled with the following whitelisted selectors. */\r\n  blacklist: string[] = ['a'];\r\n}\r\n\r\nexport function applyScriptTagOptions(options: Options): void {\r\n  // Parse options object from data-blinx attribute on script tag\r\n  const tagOptionsString = u('script[data-blinx]').data('blinx');\r\n  let opts: Partial<Options> = {};\r\n  try {\r\n    // tslint:disable-next-line:no-eval\r\n    const evalOpts = eval(`(${tagOptionsString})`);\r\n    if (evalOpts instanceof Object) {\r\n      opts = evalOpts;\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  } catch (e) {\r\n    console.error(`Blinx: Invalid options: '${tagOptionsString}'`);\r\n  }\r\n  // If user does not specify language in script tag, check whether he has inlcude a bcv_parser with a single language already\r\n  if (!(opts.language)) {\r\n    const language = Parser.getCurrentParserLanguage();\r\n    if (language) {\r\n      opts.language = language;\r\n    }\r\n  }\r\n  for (const key in opts) {\r\n    if (opts.hasOwnProperty(key)) {\r\n      options[key] = opts[key];\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./options/options.ts","import { loadScript } from './dom';\r\n\r\n/** Load polyfills if required */\r\nexport function loadPolyfills(callback?: (successful: boolean) => void) {\r\n  if ('Promise' in window && classListSupported()) {\r\n    if (callback) {\r\n      callback(true);\r\n    }\r\n  } else {\r\n    loadScript(`https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList|gated,Promise|gated`, callback);\r\n  }\r\n}\r\n\r\n// Taken from polyfill.io guards\r\nfunction classListSupported(): boolean {\r\n  return 'DOMTokenList' in window &&\r\n    (x => 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true)(document.createElement('x')) &&\r\n    'document' in window &&\r\n    'classList' in document.documentElement &&\r\n    'Element' in window &&\r\n    'classList' in Element.prototype &&\r\n    (() => {\r\n      const e = document.createElement('span');\r\n      e.classList.add('a', 'b');\r\n      return e.classList.contains('b');\r\n    })();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./helpers/polyfills.ts","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isString.js\n// module id = 8\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_baseGetTag.js\n// module id = 9\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_root.js\n// module id = 10\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_freeGlobal.js\n// module id = 11\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_getRawTag.js\n// module id = 13\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/_objectToString.js\n// module id = 14\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isArray.js\n// module id = 15\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/lodash/isObjectLike.js\n// module id = 16\n// module chunks = 0","import { OnlineBible } from './online-bible.class';\r\nimport { BibleServerOnlineBible } from './bible-server-online-bible.class';\r\n\r\nexport type OnlineBibleName = 'BibleServer';\r\n\r\nexport function getOnlineBible(name: OnlineBibleName): OnlineBible {\r\n  return name === 'BibleServer' ? new BibleServerOnlineBible() : new BibleServerOnlineBible();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./online-bible/online-bible-overview.ts","import { OnlineBible } from './online-bible.class';\r\nimport { BibleVersionCode } from '../bible-versions/bible-versions.const';\r\n\r\nexport class BibleServerOnlineBible extends OnlineBible {\r\n\r\n  protected readonly availableVersionCodes: BibleVersionCode[] = [\r\n    'ar.ALAB', 'bg.BGV', 'bg.CBT', 'cs.B21', 'cs.BKR', 'cs.CEP', 'cs.SNC', 'da.DK', 'de.ELB', 'de.EU', 'de.GNB', 'de.HFA', 'de.LUT', 'de.MENG', 'de.NeÜ', 'de.NGÜ', 'de.NLB', 'de.SLT', 'de.ZB', 'en.ESV', 'en.KJV', 'en.NIRV', 'en.NIV', 'es.BTX', 'es.CST', 'es.NVI', 'fa.FCB', 'fr.BDS', 'fr.LSG', 'fr.S21', 'he.OT', 'hr.CKK', 'hu.HUN', 'hu.KAR', 'it.ITA', 'it.NRS', 'la.LXX', 'la.VUL', 'nl.HTB', 'no.NOR', 'pl.PSZ', 'pt.PRT', 'ro.NTR', 'ru.CARS', 'ru.RSZ', 'sk.NPK', 'sv.BSV', 'tr.TR', 'za.CCBT', 'za.CUVS'];\r\n\r\n  public getPassageLink(osis: string, bibleVersion: BibleVersionCode): string {\r\n    // Fixes for sequences\r\n    const sequenceIndex = osis.indexOf('-');\r\n    if (sequenceIndex > 0) {\r\n      // Remove duplicate book from sequences\r\n      const book = osis.split('.')[0];\r\n      osis = osis.replace(new RegExp(`-${book}.`, 'i'), '-');\r\n    }\r\n    return `https://www.bibleserver.com/text/${bibleVersion.split('.')[1]}/${osis}`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./online-bible/bible-server-online-bible.class.ts","import { BibleVersions, BibleVersionCode, BibleVersionsInterface } from '../bible-versions/bible-versions.const';\r\nimport { LanguageCode } from '../options/languages';\r\n\r\nexport abstract class OnlineBible {\r\n  protected readonly abstract availableVersionCodes: BibleVersionCode[];\r\n\r\n  /** Return all available versions for this bible and (if provided) for the given language. */\r\n  public getAvailableVersions(language?: LanguageCode): Partial<BibleVersionsInterface> {\r\n    const allVersions = new BibleVersions();\r\n    const availableVersions: Partial<BibleVersionsInterface> = {};\r\n    for (const version in allVersions) {\r\n      if (allVersions.hasOwnProperty(version)) {\r\n        if (this.availableVersionCodes.indexOf(version as BibleVersionCode) > -1) {\r\n          if (!language || language === (allVersions as any)[version].languageCode) {\r\n            (availableVersions as any)[version] = (allVersions as any)[version];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return availableVersions;\r\n  }\r\n\r\n  public abstract getPassageLink(osis: string, bibleVersion: BibleVersionCode): string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./online-bible/online-bible.class.ts","import { BibleVersion } from './bible-version.interface';\r\n\r\nexport type BibleVersionCode = keyof BibleVersions;\r\n\r\nexport type BibleVersionsInterface = {\r\n  [P in BibleVersionCode]: BibleVersion\r\n};\r\n\r\n/**\r\n * All Bible versions supported by one of the online Bibles or Bible APIs.\r\n * If the user has not specified a Bible version, the first one available for that language in the order given below will be chosen.\r\n */\r\nexport class BibleVersions {\r\n\r\n  'ar.ALAB' = { title: 'التفسير التطبيقي للكتاب المقدس', languageCode: 'ar', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'bg.BGV' = { title: 'Veren', languageCode: 'bg', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'bg.CBT' = { title: 'Библия, нов превод от оригиналните езици', languageCode: 'bg', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n\r\n  'cs.B21' = { title: 'Bible, překlad 21. století', languageCode: 'cs', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'cs.BKR' = { title: 'Bible Kralická', languageCode: 'cs', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'cs.CEP' = { title: 'Český ekumenický překlad', languageCode: 'cs', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'cs.SNC' = { title: 'Slovo na cestu', languageCode: 'cs', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'da.DK' = { title: 'Bibelen på hverdagsdansk', languageCode: 'da', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'de.ELB' = { title: 'Elberfelder Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.ZB' = { title: 'Zürcher Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.LUT' = { title: 'Lutherbibel 2017', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'de.NeÜ' = { title: 'Neue evangelistische Übersetzung', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.SLT' = { title: 'Schlachter 2000', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.EU' = { title: 'Einheitsübersetzung 2016', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'de.MENG' = { title: 'Menge Bibel', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'de.NLB' = { title: 'Neues Leben. Die Bibel', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.GNB' = { title: 'Gute Nachricht Bibel', languageCode: 'de', availableSections: ['OT', 'NT', 'Apocrypha'] } as BibleVersion;\r\n  'de.HFA' = { title: 'Hoffnung für Alle', languageCode: 'de', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'de.NGÜ' = { title: 'Neue Genfer Übersetzung', languageCode: 'de', availableSections: ['Psalms', 'NT'] } as BibleVersion; // Very good but unfortunatly not complete\r\n\r\n  'en.ESV' = { title: 'English Standard Version', languageCode: 'en', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'en.NIV' = { title: 'New International Version', languageCode: 'en', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'en.KJV' = { title: 'King James Version', languageCode: 'en', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'en.NIRV' = { title: 'New Int. Readers Version', languageCode: 'en', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'es.BTX' = { title: 'La Biblia Textual', languageCode: 'es', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'es.CST' = { title: 'Nueva Versión Internacional (Castilian)', languageCode: 'es', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'es.NVI' = { title: 'Nueva Versión Internacional', languageCode: 'es', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'fa.FCB' = { title: 'کتاب مقدس، ترجمه تفسیری', languageCode: 'fa', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'fr.BDS' = { title: 'Bible du Semeur', languageCode: 'fr', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'fr.LSG' = { title: 'Louis Segond 1910', languageCode: 'fr', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'fr.S21' = { title: 'Segond 21', languageCode: 'fr', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'he.OT' = { title: 'Hebrew OT', languageCode: 'he', availableSections: ['OT'] } as BibleVersion;\r\n\r\n  'hr.CKK' = { title: 'Knjiga O Kristu', languageCode: 'hr', availableSections: ['NT'] } as BibleVersion;\r\n\r\n  'hu.HUN' = { title: 'Hungarian', languageCode: 'hu', availableSections: ['NT'] } as BibleVersion;\r\n  'hu.KAR' = { title: 'IBS-fordítás (Új Károli)', languageCode: 'hu', availableSections: ['OT'] } as BibleVersion;\r\n\r\n  'it.ITA' = { title: 'La Parola è Vita', languageCode: 'it', availableSections: ['NT'] } as BibleVersion;\r\n  'it.NRS' = { title: 'Nuova Riveduta 2006', languageCode: 'it', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'la.LXX' = { title: 'Septuaginta', languageCode: 'la', availableSections: ['OT'] } as BibleVersion;\r\n  'la.VUL' = { title: 'Vulgata', languageCode: 'la', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'nl.HTB' = { title: 'Het Boek', languageCode: 'nl', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'no.NOR' = { title: 'En Levende Bok', languageCode: 'no', availableSections: ['NT'] } as BibleVersion;\r\n\r\n  'pl.PSZ' = { title: 'Słowo Życia', languageCode: 'pl', availableSections: ['NT'] } as BibleVersion;\r\n\r\n  'pt.PRT' = { title: 'O Livro', languageCode: 'pt', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'ro.NTR' = { title: 'Noua traducere în limba românã', languageCode: 'ro', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'ru.CARS' = { title: 'Священное Писание, Восточный перевод', languageCode: 'ru', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'ru.RSZ' = { title: 'Новый перевод на русский язык', languageCode: 'ru', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'sk.NPK' = { title: 'Nádej pre kazdého', languageCode: 'sk', availableSections: ['NT'] } as BibleVersion;\r\n\r\n  'sv.BSV' = { title: 'Nya Levande Bibeln', languageCode: 'sv', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'tr.TR' = { title: 'Türkçe', languageCode: 'tr', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n\r\n  'za.CCBT' = { title: '聖經當代譯本修訂版', languageCode: 'za', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n  'za.CUVS' = { title: '中文和合本（简体）', languageCode: 'za', availableSections: ['OT', 'NT'] } as BibleVersion;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./bible-versions/bible-versions.const.ts"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;AACA;;;;;;;;;ACAA;AAGA;AAAA;AAqDA;AAnDA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AArDA;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACLA;AAEA;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAMA;AACA;AAAA;AALA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5JA;;;;;;;;;;ACRA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AApBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AAIA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;ACLA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;;AAYA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAfA;;;;;;;;;;ACHA;AAGA;AAAA;AAoBA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AApBA;;;;;;;;;;ACKA;;;AAGA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AA3EA;;;;A","sourceRoot":""}